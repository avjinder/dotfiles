# zmodload zsh/zprof
# Path to my oh-my-zsh installation.
case $OSTYPE in
	linux*)
		if [[ $(uname -r) == *microsoft* ]]; then
			LANG="en_US.utf8"
		else
			LANG="en_IN.utf8"
		fi
		;;
esac

export LANG
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="af-magic"

plugins=()

DISABLE_AUTO_UPDATE="false"
COMPLETION_WAITING_DOTS="true"
DISABLE_UPDATE_PROMPT="true"
ENABLE_CORRECTION="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
export LS_COLORS="$LS_COLORS:ow=1;34:tw=1;34:"
export UPDATE_ZSH_DAYS=3
export CORRECT_IGNORE_FILE=".*"

source $ZSH/oh-my-zsh.sh
[ -z "$TMUX" ] && export TERM=xterm-256color

################### ALIASES ##################
alias sc="source $ZDOTDIR/.zshrc"
alias viz="vim ~/.zshrc"
# alias niz="nvim ~/.zshrc"
alias niz="chezmoi edit --apply $ZDOTDIR/.zshrc"
alias viv="vim ~/.vimrc"
alias niv="nvim ~/dotfiles/nvim/init.lua"
alias winhm="cd /mnt/c/Users/91783/"
alias cddev="cd /mnt/c/Users/91783/Developer/"
alias clx="clx --no-less-verify"
alias info="info --vi"
# alias bat="batcat"
alias rdo="radio.sh"
alias txk='tmux kill-session -t $(tmux ls | cut -d ':' -f 1 | fzf --preview='' --height 40%)'
alias cz='chezmoi'
alias pth="echo $PATH | tr ':' '\n'"

# suffix aliases: files with these filetypes will open in vscode
alias -s md=code
alias -s json=code

################# ENVIRONMENT ############
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:$HOME/.local/bin/scripts
export PATH=$PATH:$HOME/.npm-global/bin
export PATH=$PATH:$HOME/.fzf/bin
# export PATH=$PATH:$HOME/.dotfiles/scripts
export INFOPATH=$INFOPATH/usr/share/info/emacs
export MANPAGER="sh -c 'col -bx | batcat -l man -p'"
export EDITOR='nvim'
export MYVIMRC="$HOME/.vimrc"
export SYSTEMD_EDITOR='nvim'

export FZF_DEFAULT_OPTS="--height=90% --border=rounded --preview=\"batcat --color=always --style=numbers --line-range=:500 {}\""
# find all files ignoring .git dir
export FZF_DEFAULT_COMMAND="find . -type f -not -path \"*/.git/*\" -prune -printf '%P\n'"


############### FUNCTIONS ##################
# select process in fzf and kill it
fps() {
	ps -ef | fzf --preview='' | awk '{print $2}' | xargs -r kill -9
}

# lazy loads nvm whenever nvm, node, npx or npm is run
lazynvm() {
	unset -f nvm node npm npx
	export NVM_DIR="$HOME/.nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
	[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}
nvm() { lazynvm nvm $@ }
npx() { lazynvm npx $@ }
npm() { lazynvm npm $@ }
node() { lazynvm node $@ }

function timezsh() {
	shell=${1-$SHELL}
	for i in $(seq 1 5); do time $shell -i -c exit; done
}

antidote_dir=${ZDOTDIR:-~}/.antidote
plugins_txt=${ZDOTDIR:-~}/.zsh_plugins.txt
static_file=${ZDOTDIR:-~}/.zsh_plugins.zsh

# checks if .zsh_plugins.txt modification time is after .zsh_plugins.zsh mod time
if [[ ! $static_file -nt $plugins_txt ]]; then
	# if .antidote dir exists, clone the new package
	[[ -e $antidote_dir ]] || 
		git clone --depth=1 https://github.com/mattmc3/antidote.git $antidote_dir
			(
			source $antidote_dir/antidote.zsh
			[[ -e $plugins_txt ]] || touch $plugins_txt
			# pass .zsh_plugins.txt as input to antidote bundlesave
			# save its output to .zsh_plugins.zsh
			antidote bundle <$plugins_txt >$static_file
		)
fi

source $static_file
unset antidote_dir plugins_txt static_file

# shows all config options in dmenu, and lets you edit on selection
ecg() {
	dmenu_edit_configs.sh &!
}

bgset() {
	feh --randomize --bg-center $HOME/Pictures/Wallpapers
}

if command -v bat &> /dev/null; then
	export PAGER=bat
elif command -v batcat &> /dev/null; then
	export PAGER=batcat
fi

# use vi-ins mode for zsh line editor
bindkey -v

# fd() {
# 	local dir
# 	dir=$(find ${1:-.} -path '*/\.*' -prune -o -type d -print 2> /dev/null | fzf +m) && cd "$dir"
# }
#
fpath+=~/.zfunc
